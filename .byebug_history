c
params
fparams
c
@new_file_path.to_s
c
@cloned_path.to_s
@cloned_path
c
new_resource
new_resource.save
new_resource.year = "2014"
new_resource.save
new_resource.year = 2014
new_resource.save
new_resource.year
new_resource.year = ""
new_resource.save
new_resource.year
new_resource
c
new_resource.save
new_resource.year
new_resource
exit
uploader_params
@uploader
c
page.addr_zip
@zips
exit
@result
exit
@hospitals[0](0)[0]
@hospitals[0](0)
@hospitals[0]
@hospitals
c
ccc
cc
c
@dataset
c
@dataset
c
Category.find_by_name("All uninsured"c)
Category.find_by_name("All uninsured")
puts cat
cat
params[:cat_name]
c
ec
Category.find_byname("All uninsured")
params[:cat_name]
cat
c
sdfc
c
exit
puts @first_row
c
putc
puts uploader_params[:path].content_type
c
puts ss.cell(1, ss.last_column)
puts ss.cell(1, ss.last_column-2)
puts @val
puts ss.cell(2, ss.last_column-1)
puts @val
c
puts @len
puts @val
c
puts @uploaders
~puts @uploaders
c
puts @uploaders[0].name
puts @uploaders[0].path
puts @uploaders[0].id
puts @uploaders[1]
puts @uploaders[0]
c
puts @uploaders[0]
puts @uploaders[0].path
puts @uploaders
cc
@rc
c
puts @resource.category_id
puts @resource.uploader_id
c
puts @resource.category
puts @resource.path
puts @resource.id
puts @resource
c
puts params
c
c..
temp.current_row
temp = Uploader.last
current_uploader.update(current_row: 333)
c
puts result
puts current_uploader.current_row
c
puts @result
puts current_uploader.current_row
c
puts @result
c
~
c
puts @work_count
puts @current_row
puts @current_uploader.id
puts @current_uploader.current_row
puts @result
c
puts @current_uploader.current_row
c
@current_uploader.current_row
@work_count
c
puts @work_count
@result
c
cc
c
putc
puts @current_uploader.current_row
puts @current_uploader.currrent_row
puts @current_uploader
c
puts @current_uploader.current_row
puts @current_uploader.total_current_row
puts @current_uploader.total_row
puts @current_uploader.current_row
c
puts @current_uploader.current_row
puts @current_uploader.total_row
puts @current_uploader
c
puts @work_count
c
puts @work_count
c
puts @work_count % 1
puts @work_count % 100
puts @work_count
c
puts @work_count
c
puts @upload_id
puts @uploader_id
c
puts uploader_id
puts @uploader_id
c
puts @uploader.id
puts @upload.id
puts @job_id
c
puts @job_id
c
puts @uploader.path
puts uploader.id
puts uploader.ud
puts @uploader.id
puts @uploader
c
puts @cloned_path
puts @new_file_path
c
puts @new_file_path
c
puts COLUMNS[rsc_id]
c
c.
puts rsc_id
puts col_id
c
puts col_id
c
puts col_id
c
puts col_id
c
puts col_id
c
puts col_id
c
puts col_id
c
puts ss.cell(row, col_id + 1)
puts col_id
c
puts col_id
c
puts col_id
c
puts ss.cell(row, col_id)
puts COLUMNS[rsc_id]
puts col_id
c
puts row
puts ss.cell(row, col_id)
puts col_id
puts COLUMNS[rsc_id]
c
puts COLUMNS[rsc_id].casecmp(ss.cell(1, col_id))
puts ss.cell(1, col_id)
puts col_id
puts COLUMNS[rsc_id]
c
puts col_id
puts rsc_id
c
puts rsc_id
puts col_id
c
puts col_id
c
puts col_id
c
cc
c
puts col_id
c
puts rsc_start
c
puts rsc_id
c
puts rsc_id
puts col_id
c
puts col_id
c
puts col_id
c
puts col_id
c
cc
c
puts col_id
c
puts col_id
c
puts col_id
puts ss.cell(row, col_id)
puts new_resource[COLUMNS[rsc_id]]
c
puts col_id
c
puts COLUMNS[rsc_id]
puts ss.cell(1, col_id)
